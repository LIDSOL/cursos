#+TITLE: Curso interno de Linux
#+SUBTITLE: Conceptos fundamentales
#+AUTHOR: Andrea Saldaña, Francisco Galindo
#+EMAIL: saldanan.andrea.p8@gmail.com, contact@franciscogalindo.com
#+OPTIONS: H:2 toc:nil num:nil
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=169]
#+LATEX_HEADER: \input{./preamble.tex}
#+LANGUAGE: es
#+LATEX_HEADER: \usepackage[spanish]{babel}
#+COLUMNS: %45ITEM %10BEAMER_ENV(Env) %10BEAMER_ACT(Act) %4BEAMER_COL(Col)

* Instalación de Software

** Información del tema
:PROPERTIES:
:CUSTOM_ID: información-del-tema
:END:
*** Tiempo estimado
:PROPERTIES:
:CUSTOM_ID: tiempo-estimado
:END:
Aproximadamente 1 hora de clase, repartido en secciones de explicación
teórica y pequeños ejercicios para reforzar el aprendizaje.

*** Objetivos
:PROPERTIES:
:CUSTOM_ID: objetivos
:END:
- Aprender la utilidad de la existencia de usuarios, grupos y permisos
  en un sistema Linux
- Aprender a crear, modificar y eliminar usuarios y grupos del sistema.
- Se podrán interpretar y asignar diferentes permisos a los archivos del
  sistema de archivos.

** Instalando Software en un sistema linux
:PROPERTIES:
:CUSTOM_ID: instalando-software-en-un-sistema-linux
:END:
En Linux (y en UNIX), el software se instalal de una manera distinta a
otros sistemas operativos.

En lugar de utilizar una /AppStore/ o descargar cosas desde el sitio web
del desarrollador, se prefiere instalar programas mediante un /gestor de
paquetes/.

** Gestores de paquetes
:PROPERTIES:
:CUSTOM_ID: gestores-de-paquetes
:END:
Son herramientas que automatizan la instalación, actualización,
configuración y eliminación de colecciones de software (programas,
bibliotecas, ...) que se conocen como /paquetes/ en una computadora.

La manera principal de instalar software en una distribución Linux es
mediante algún gestor de paquetes.

** Gestores de paquetes
:PROPERTIES:
:CUSTOM_ID: gestores-de-paquetes-1
:END:
Un gestor de paquetes tiene una base de datos (repositorio) sobre muchos
paquetes, así como las dependencias que tiene uno del otro para que
todas las instalaciones sean correctas.

** Gestores de paquetes
:PROPERTIES:
:CUSTOM_ID: gestores-de-paquetes-2
:END:
Algunos gestores de paquetes muy conocidos son:

- =apt=: El utilizado por Debian, Ubuntu y sus derivados (Mint, etc.).
  Los paquetes con los que trabaja tienen la extensión =.deb=
- =dnf=, =yum=: Utilizados en distribuciones basadas en /RHEL/ (Fedora,
  CentOS, Rocky, etc.). Los paquetes están en formato =rpm=.
- =pacman=: Utilizado en Arch y sus derivados.

El gestor de paquetes es uno de los principales elementos que distinguen
una distribución de otra.

** =dnf=
:PROPERTIES:
:CUSTOM_ID: dnf
:END:
#+begin_src sh
dnf search paquete
sudo dnf install paquete
sudo dnf remove paquete
sudo dnf autoremove paquete
sudo dnf update
#+end_src

** Gestores de paquetes agnósticos
:PROPERTIES:
:CUSTOM_ID: gestores-de-paquetes-agnósticos
:END:
Para prevenir la fragmentación del "ecosistema" de Linux, existen
algunos gestores de paquetes que intentan funcionar sim importar la
distribución en la que se use:

- Flatpak
- Snap *
- AppImage

** Flatpak
:PROPERTIES:
:CUSTOM_ID: flatpak
:END:
/FlatHub/[fn:1] es el repositorio más grande de Flatpak:

#+begin_src sh
flatpak search programa
flatpak install programa
flatpak uninstall programa
flatpak update
#+end_src

** AppImage
:PROPERTIES:
:CUSTOM_ID: appimage
:END:
Es un formato donde el programa viene empaquetado junto a todas sus
dependencias, para que no importe el sistema que está por detrás

Ejemplo: https://github.com/jgraph/drawio-desktop

** AppImage
:PROPERTIES:
:CUSTOM_ID: appimage-1
:END:
Una vez descargado algún =.AppImage=, se le dan permisos de ejecución y
se puede correr como cualquier otro ejecutable.

** Compilando un programa
:PROPERTIES:
:CUSTOM_ID: compilando-un-programa
:END:
Si lo que deseamos instalar no se encuentra disponible fácilmente en los
gestores de paquetes, puede optarse por compilar directamente

¡Instalemos =git=!

** Compilando un programa
:PROPERTIES:
:CUSTOM_ID: compilando-un-programa-1
:END:
*** Instalar requerimientos
:PROPERTIES:
:CUSTOM_ID: instalar-requerimientos
:END:
#+begin_src sh
$ sudo apt install build-essential
$ sudo apt install make \\
    libssl-dev libghc-zlib-dev \\
    libcurl4-gnutls-dev libexpat1-dev \\
    gettext
#+end_src

*** Obtener código fuente
:PROPERTIES:
:CUSTOM_ID: obtener-código-fuente
:END:
#+begin_src sh
$ sudo mkdir /opt/git
$ wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.46.0.tar.xz
#+end_src

** Compilando git
:PROPERTIES:
:CUSTOM_ID: compilando-git
:END:
*** Extrae el código
:PROPERTIES:
:CUSTOM_ID: extrae-el-código
:END:
#+begin_src sh
$ tar -xvf git-2.46.0.tar.xz
$ cd git-2.46.0
#+end_src

*** Configura la instalación
:PROPERTIES:
:CUSTOM_ID: configura-la-instalación
:END:
#+begin_src sh
$ make -j $(nproc) prefix=/opt/git all
#+end_src

*** Instala el software
:PROPERTIES:
:CUSTOM_ID: instala-el-software
:END:
#+begin_src sh
$ sudo make prefix=/opt/git install
#+end_src

*** Prueba el software
:PROPERTIES:
:CUSTOM_ID: prueba-el-software
:END:
#+begin_src sh
$ /opt/git/bin/git init
#+end_src

[fn:1] https://flathub.org/setup
